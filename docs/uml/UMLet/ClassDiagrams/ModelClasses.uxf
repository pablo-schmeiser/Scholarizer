<diagram program="umletino" version="15.0.0"><zoom_level>2</zoom_level><help_text>Space for diagram </help_text><element><id>UMLPackage</id><coordinates><x>260</x><y>318</y><w>102</w><h>62</h></coordinates><panel_attributes>indices</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>284</x><y>330</y><w>42</w><h>14</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
IIndex
--
+calculate(List&lt;Int&gt; args): Int
+getName(): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>314</x><y>356</y><w>42</w><h>20</h></coordinates><panel_attributes>H-Index
{Singleton}
--
-name: String
--
#calculate(List&lt;Int&gt; args): Int
#getName(): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>320</x><y>342</y><w>18</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;70;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>266</x><y>356</y><w>42</w><h>20</h></coordinates><panel_attributes>I10-Index
{Singleton}
--
-name: String
--
#calculate(List&lt;Int&gt; args): Int
#getName(): String

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>286</x><y>342</y><w>20</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>80;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>232</x><y>188</y><w>50</w><h>30</h></coordinates><panel_attributes>PaperEntity
{Entity}
--
-authors: List&lt;String&gt;
-title: String
-abstract: String
-publicationDate: Date
-url: String
--
+exportReference(bibTex: boolean): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>96</x><y>128</y><w>268</w><h>110</h></coordinates><panel_attributes>springEntities</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>182</x><y>188</y><w>42</w><h>30</h></coordinates><panel_attributes>AuthorEntity
{Entity}
--
-name: String
-university: String
-frequentCoAuthors: List&lt;String&gt;
-frequentCiters: List&lt;String&gt;
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>296</x><y>134</y><w>60</w><h>100</h></coordinates><panel_attributes>users</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>298</x><y>142</y><w>54</w><h>46</h></coordinates><panel_attributes>UserEntity
{Entity}
--
-mail: String
-password: String
-interests: List&lt;String&gt;
-bookmarks: List&lt;JSONObject&gt;
-follows. List&lt;JSONObject&gt;
-recommendations: List&lt;JSONObject&gt;
--
+changePassword(newPassword: String): void
+changeMail(newMail: String): void
+bookmark(paper: JSONObject): void
+follow(author: JSONObject): void
+addInterest(interest: String): void
+addRecommendations(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>298</x><y>204</y><w>54</w><h>28</h></coordinates><panel_attributes>UserRepository
{Repository}
--

--
#findByMail(mail: String): UserEntity
#delete(user: UserEntity): boolean
#create(mail: String, pw: String): boolean
#findByOID(id: long): UserEntity
#edit(user: UserEntity): boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>318</x><y>186</y><w>16</w><h>22</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*
stores ^</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>0</x><y>266</y><w>140</w><h>88</h></coordinates><panel_attributes>APICommunication</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>12</x><y>310</y><w>74</w><h>18</h></coordinates><panel_attributes>SemanticScholarCommunication
--

--
-getAPIKey(): String
-doAPICall(searchType: String, filters: List&lt;String&gt;): JSONObject</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>2</x><y>276</y><w>32</w><h>14</h></coordinates><panel_attributes>API Key stored in ".env"
is read and returned by
getAPIKey() of the 
respective class</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>32</x><y>276</y><w>22</w><h>16</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;60;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>50</x><y>276</y><w>74</w><h>28</h></coordinates><panel_attributes>/APICommunication/
{abstract}
--

--
/-getAPIKey(): String/
/-doAPICall(params: List&lt;String&gt;): JSONObject/
+getData(searchType: String, filters: List&lt;String&gt;): JSONObject

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>58</x><y>302</y><w>6</w><h>12</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>UMLClass</id><coordinates><x>62</x><y>332</y><w>74</w><h>18</h></coordinates><panel_attributes>IEEEXploreCommunication
--

--
-getAPIKey(): String
-doAPICall(searchType: String, filters: List&lt;String&gt;): JSONObject</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>112</x><y>302</y><w>6</w><h>34</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;150</additional_attributes></element><element><id>UMLClass</id><coordinates><x>156</x><y>278</y><w>90</w><h>26</h></coordinates><panel_attributes>DataMerger
{Singleton}
--
-APIs: List&lt;APICommunication&gt;
--
-getAllResponses(params: List&lt;String&gt;): List&lt;JSONObject&gt;
-mergeData(List&lt;JSONObject&gt;): JSONObject
#getData(searchType: String, filters: List&lt;String&gt;): JSONObject

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>156</x><y>320</y><w>90</w><h>22</h></coordinates><panel_attributes>DataCleaner
{Singleton}
--
-merger: DataMerger
-calculator: AdditionalCalculations
--
-cleanData(data: JSONObject): JSONObject
+getData(searchType: String, filters: List&lt;String&gt;, sortKey: String): JSONObject


</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>200</x><y>302</y><w>8</w><h>22</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>102</x><y>142</y><w>186</w><h>84</h></coordinates><panel_attributes>search</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>208</x><y>148</y><w>52</w><h>30</h></coordinates><panel_attributes>/SearchEntity/
{abstract}
--
-citations: int
-NonSelfCitations: int
-NoCoAuthorsCitations: int
-indices: List&lt;int&gt;
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>250</x><y>176</y><w>6</w><h>16</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>214</x><y>176</y><w>6</w><h>16</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>278</x><y>86</y><w>16</w><h>50</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;230;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>270</x><y>74</y><w>20</w><h>14</h></coordinates><panel_attributes>controllers</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>200</x><y>224</y><w>16</w><h>52</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;10;10;240</additional_attributes></element><element><id>UMLNote</id><coordinates><x>106</x><y>194</y><w>28</w><h>14</h></coordinates><panel_attributes>JSONObjet is read and
the according vars of 
the Entity are set</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>124</x><y>182</y><w>6</w><h>16</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLNote</id><coordinates><x>378</x><y>322</y><w>50</w><h>20</h></coordinates><panel_attributes>Using the 
org.reflections library,it is possible to get 
all classes that inherit from a specific class. 
In this case all Inices</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>360</x><y>330</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>390</x><y>202</y><w>108</w><h>74</h></coordinates><panel_attributes>UserDB</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>350</x><y>210</y><w>44</w><h>8</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;access&gt;&gt;</panel_attributes><additional_attributes>10;20;200;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>422</x><y>208</y><w>42</w><h>28</h></coordinates><panel_attributes>&lt;&lt;table&gt;&gt;
User
--
-OID: long
-mail: String
-pw: String
-interests: List&lt;String&gt;
-bookmarks: paper
-follows: author
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>234</x><y>368</y><w>30</w><h>8</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;20;130;20</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>154</x><y>268</y><w>94</w><h>124</h></coordinates><panel_attributes>DataModification</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>122</x><y>292</y><w>38</w><h>8</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>170;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>168</x><y>362</y><w>68</w><h>26</h></coordinates><panel_attributes>AdditionalCalculations
{Singleton}
--
-cleaner: DataCleaner
--
+indexCalculation(authorData: JSONObject): void
+selfCitationCalculation(authorData: JSONObject): void
+coAuthorCalculation(authorData: JSONObject): void
+frequentCitersCalculation(authorData: JSONObject): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>200</x><y>340</y><w>8</w><h>26</h></coordinates><panel_attributes>lt=-&gt;
m1=1
m2=1</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLNote</id><coordinates><x>108</x><y>368</y><w>38</w><h>18</h></coordinates><panel_attributes>Having a reference to the 
cleaner might not be necessary 
as it only would be needed for 
getting the paper dataof a given 
author via more API calls</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>144</x><y>370</y><w>28</w><h>6</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;120;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>226</x><y>242</y><w>28</w><h>14</h></coordinates><panel_attributes>Not sure if the 
exporting feature 
should go here</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>236</x><y>216</y><w>6</w><h>30</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;10;10;130</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>276</x><y>260</y><w>104</w><h>26</h></coordinates><panel_attributes>recommendation</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>278</x><y>268</y><w>100</w><h>14</h></coordinates><panel_attributes>RecommendationHandler
--
-cleaner: DataCleaner
--
+getRecommendations(interests: List&lt;String&gt;, follows: List&lt;String&gt;): List&lt;JSONObject&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>246</x><y>274</y><w>34</w><h>8</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>150;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>326</x><y>232</y><w>16</w><h>36</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;160;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>302</x><y>290</y><w>42</w><h>16</h></coordinates><panel_attributes>This class would just be responsible 
for doing additional API calls to 
get the recommendations
based on interests and follows</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>316</x><y>280</y><w>6</w><h>14</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>104</x><y>164</y><w>94</w><h>20</h></coordinates><panel_attributes>SearchParser
--
_-cleaner: &lt;DataCleaner&gt; {readOnly}_
--
+getResult(search: String, filters: List&lt;String&gt;, sortKey: String): List&lt;SearchEntity&gt;
-createEntity(json: JSONObject): SearchEntity</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>150</x><y>150</y><w>62</w><h>18</h></coordinates><panel_attributes>lt=&lt;-
m1=0..*
m2=1
creates &gt;</panel_attributes><additional_attributes>290;20;10;20;10;70</additional_attributes></element><element><id>UMLNote</id><coordinates><x>122</x><y>250</y><w>32</w><h>14</h></coordinates><panel_attributes>Merger class not needed 
if we decide to only use 
the Semantic Schloar API</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>138</x><y>262</y><w>24</w><h>20</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;100;80</additional_attributes></element><element><id>UMLClass</id><coordinates><x>264</x><y>242</y><w>26</w><h>6</h></coordinates><panel_attributes>java.util::Date
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>274</x><y>216</y><w>12</w><h>30</h></coordinates><panel_attributes>lt=&lt;-
use v</panel_attributes><additional_attributes>10;130;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>394</x><y>246</y><w>42</w><h>28</h></coordinates><panel_attributes>&lt;&lt;table&gt;&gt;
paper
--
-OID: long
-title: String
-author: String
-abstract: String
-url: String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>452</x><y>246</y><w>42</w><h>28</h></coordinates><panel_attributes>&lt;&lt;table&gt;&gt;
author
--
-OID: long
-name: String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>388</x><y>138</y><w>28</w><h>14</h></coordinates><panel_attributes>TODO: add bookmark and
follow entity and repo</panel_attributes><additional_attributes></additional_attributes></element></diagram>