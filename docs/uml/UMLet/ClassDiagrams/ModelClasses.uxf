<diagram program="umletino" version="15.0.0"><zoom_level>8</zoom_level><help_text>Space for diagram </help_text><element><id>UMLPackage</id><coordinates><x>1040</x><y>976</y><w>408</w><h>248</h></coordinates><panel_attributes>indices</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1136</x><y>1024</y><w>168</w><h>56</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
IIndex
--
+calculate(List&lt;Int&gt; args): Int
+getName(): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1264</x><y>1128</y><w>168</w><h>80</h></coordinates><panel_attributes>H-Index
{Singleton}
--
-name: String
--
#calculate(List&lt;Int&gt; args): Int
#getName(): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1256</x><y>1072</y><w>104</w><h>72</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;110;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1064</x><y>1128</y><w>168</w><h>80</h></coordinates><panel_attributes>I10-Index
{Singleton}
--
-name: String
--
#calculate(List&lt;Int&gt; args): Int
#getName(): String

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1144</x><y>1072</y><w>80</w><h>72</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>80;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>928</x><y>456</y><w>200</w><h>120</h></coordinates><panel_attributes>PaperEntity
{Entity}
--
-author: String
-title: String
-abstract: String
-publicationDate: String
-link: String
--
+exportReference(bibTex: boolean): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>384</x><y>216</y><w>1072</w><h>432</h></coordinates><panel_attributes>springEntities</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>728</x><y>456</y><w>168</w><h>120</h></coordinates><panel_attributes>AuthorEntity
{Entity}
--
-name: String
-university: String
-frequentCoAuthors: List&lt;String&gt;
-frequentCiters: List&lt;String&gt;
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>1184</x><y>240</y><w>240</w><h>392</h></coordinates><panel_attributes>users</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1192</x><y>272</y><w>216</w><h>168</h></coordinates><panel_attributes>UserEntity
{Entity}
--
-mail: String
-password: String
-interests: List&lt;String&gt;
-bookmarks: List&lt;JSONObject&gt;
-recommendations: List&lt;JSONObject&gt;
--
+changePassword(newPassword: String): void
+changeMail(newMail: String): void
+bookmark(paper: JSONObject): void
+follow(author: JSONObject): void
+addInterest(interest: String): void
+addRecommendations(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1192</x><y>504</y><w>216</w><h>120</h></coordinates><panel_attributes>UserRepository
{Repository}
--

--
#findByMail(mail: String): UserEntity
#delete(user: UserEntity): boolean
#create(mail: String, pw: String): boolean
#findByOID(id: long): UserEntity
#edit(user: UserEntity): boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1272</x><y>432</y><w>64</w><h>88</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*
stores ^</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>0</x><y>768</y><w>560</w><h>352</h></coordinates><panel_attributes>APICommunication</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>48</x><y>944</y><w>296</w><h>72</h></coordinates><panel_attributes>SemanticScholarCommunication
--

--
-getAPIKey(): String
-doAPICall(searchType: String, filters: List&lt;String&gt;): JSONObject</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>8</x><y>808</y><w>128</w><h>56</h></coordinates><panel_attributes>API Key stored in ".env"
is read and returned by
getAPIKey() of the 
respective class</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>128</x><y>808</y><w>88</w><h>64</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;60;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>200</x><y>808</y><w>296</w><h>112</h></coordinates><panel_attributes>/APICommunication/
{abstract}
--

--
/-getAPIKey(): String/
/-doAPICall(params: List&lt;String&gt;): JSONObject/
+getData(searchType: String, filters: List&lt;String&gt;): JSONObject

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>232</x><y>912</y><w>24</w><h>48</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>UMLClass</id><coordinates><x>248</x><y>1032</y><w>296</w><h>72</h></coordinates><panel_attributes>IEEEXploreCommunication
--

--
-getAPIKey(): String
-doAPICall(searchType: String, filters: List&lt;String&gt;): JSONObject</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>448</x><y>912</y><w>24</w><h>136</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;150</additional_attributes></element><element><id>UMLClass</id><coordinates><x>624</x><y>816</y><w>360</w><h>104</h></coordinates><panel_attributes>DataMerger
{Singleton}
--
-APIs: List&lt;APICommunication&gt;
--
-getAllResponses(params: List&lt;String&gt;): List&lt;JSONObject&gt;
-mergeData(List&lt;JSONObject&gt;): JSONObject
#getData(searchType: String, filters: List&lt;String&gt;): JSONObject

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>624</x><y>984</y><w>360</w><h>88</h></coordinates><panel_attributes>DataCleaner
{Singleton}
--
-merger: DataMerger
-calculator: AdditionalCalculations
--
-cleanData(data: JSONObject): JSONObject
+getData(searchType: String, filters: List&lt;String&gt;, sortKey: String): JSONObject


</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>800</x><y>912</y><w>32</w><h>88</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>408</x><y>272</y><w>744</w><h>336</h></coordinates><panel_attributes>search</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>832</x><y>296</y><w>208</w><h>120</h></coordinates><panel_attributes>/SearchEntity/
{abstract}
--
-citations: int
-NonSelfCitations: int
-NoCoAuthorsCitations: int
-indices: List&lt;int&gt;
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1000</x><y>408</y><w>24</w><h>64</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>856</x><y>408</y><w>24</w><h>64</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>1112</x><y>48</y><w>64</w><h>200</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;230;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>1080</x><y>0</y><w>80</w><h>56</h></coordinates><panel_attributes>controllers</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>800</x><y>600</y><w>64</w><h>208</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;10;10;240</additional_attributes></element><element><id>UMLNote</id><coordinates><x>424</x><y>480</y><w>112</w><h>56</h></coordinates><panel_attributes>JSONObjet is read and
the according vars of 
the Entity are set</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>496</x><y>432</y><w>24</w><h>64</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1512</x><y>992</y><w>200</w><h>80</h></coordinates><panel_attributes>Using the 
org.reflections library,it is possible to get 
all classes that inherit from a specific class. 
In this case all Inices</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1440</x><y>1024</y><w>88</w><h>24</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>1504</x><y>512</y><w>200</w><h>168</h></coordinates><panel_attributes>UserDB</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1400</x><y>528</y><w>120</w><h>32</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;access&gt;&gt;</panel_attributes><additional_attributes>10;20;130;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1520</x><y>552</y><w>168</w><h>112</h></coordinates><panel_attributes>&lt;&lt;table&gt;&gt;
User
--
-OID: long
-mail: String
-pw: String
-interests: List&lt;String&gt;
-bookmarks: List&lt;JSONObject&gt;
-follows: List&lt;JSONObject&gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>976</x><y>1040</y><w>80</w><h>32</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;20;80;20</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>616</x><y>776</y><w>376</w><h>496</h></coordinates><panel_attributes>DataModification</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>488</x><y>872</y><w>152</w><h>32</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>170;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>672</x><y>1152</y><w>272</w><h>104</h></coordinates><panel_attributes>AdditionalCalculations
{Singleton}
--
-cleaner: DataCleaner
--
+indexCalculation(authorData: JSONObject): void
+selfCitationCalculation(authorData: JSONObject): void
+coAuthorCalculation(authorData: JSONObject): void
+frequentCitersCalculation(authorData: JSONObject): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>800</x><y>1064</y><w>32</w><h>104</h></coordinates><panel_attributes>lt=-&gt;
m1=1
m2=1</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLNote</id><coordinates><x>432</x><y>1176</y><w>152</w><h>72</h></coordinates><panel_attributes>Having a reference to the 
cleaner might not be necessary 
as it only would be needed for 
getting the paper dataof a given 
author via more API calls</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>576</x><y>1184</y><w>112</w><h>24</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;120;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>976</x><y>656</y><w>112</w><h>56</h></coordinates><panel_attributes>Not sure if the 
exporting feature 
should go here</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1016</x><y>568</y><w>24</w><h>104</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>1104</x><y>744</y><w>416</w><h>104</h></coordinates><panel_attributes>recommendation</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1112</x><y>776</y><w>400</w><h>56</h></coordinates><panel_attributes>RecommendationHandler
--
-cleaner: DataCleaner
--
+getRecommendations(interests: List&lt;String&gt;, follows: List&lt;String&gt;): List&lt;JSONObject&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>984</x><y>800</y><w>136</w><h>32</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>150;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1304</x><y>624</y><w>64</w><h>152</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;170;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1208</x><y>864</y><w>168</w><h>64</h></coordinates><panel_attributes>This class would just be responsible 
for doing additional API calls to 
get the recommendations
based on interests and follows</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1264</x><y>824</y><w>24</w><h>56</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>416</x><y>360</y><w>376</w><h>80</h></coordinates><panel_attributes>SearchParser
--
_-cleaner: &lt;DataCleaner&gt; {readOnly}_
--
+getResult(search: String, filters: List&lt;String&gt;, sortKey: String): List&lt;SearchEntity&gt;
-createEntity(json: JSONObject): SearchEntity</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>304</y><w>248</w><h>72</h></coordinates><panel_attributes>lt=&lt;-
m1=0..*
m2=1
creates &gt;</panel_attributes><additional_attributes>290;20;10;20;10;70</additional_attributes></element><element><id>UMLNote</id><coordinates><x>488</x><y>704</y><w>128</w><h>56</h></coordinates><panel_attributes>Merger class not needed 
if we decide to only use 
the Semantic Schloar API</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>552</x><y>752</y><w>96</w><h>80</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;100;80</additional_attributes></element></diagram>