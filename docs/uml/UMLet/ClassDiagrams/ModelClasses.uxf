<diagram program="umletino" version="15.0.0"><zoom_level>10</zoom_level><help_text>Space for diagram </help_text><element><id>UMLPackage</id><coordinates><x>1300</x><y>1220</y><w>510</w><h>310</h></coordinates><panel_attributes>indices</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1420</x><y>1280</y><w>210</w><h>70</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
IIndex
--
+calculate(List&lt;Int&gt; args): Int
+getName(): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1580</x><y>1410</y><w>210</w><h>100</h></coordinates><panel_attributes>H-Index
{Singleton}
--
-name: String
--
#calculate(List&lt;Int&gt; args): Int
#getName(): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1570</x><y>1340</y><w>130</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;110;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1330</x><y>1410</y><w>210</w><h>100</h></coordinates><panel_attributes>I10-Index
{Singleton}
--
-name: String
--
#calculate(List&lt;Int&gt; args): Int
#getName(): String

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1430</x><y>1340</y><w>100</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>80;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1160</x><y>570</y><w>250</w><h>150</h></coordinates><panel_attributes>PaperEntity
{Entity}
--
-author: String
-title: String
-abstract: String
-publicationDate: Date
-link: String
--
+exportReference(bibTex: boolean): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>480</x><y>270</y><w>1340</w><h>550</h></coordinates><panel_attributes>springEntities</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>910</x><y>570</y><w>210</w><h>150</h></coordinates><panel_attributes>AuthorEntity
{Entity}
--
-name: String
-university: String
-frequentCoAuthors: List&lt;String&gt;
-frequentCiters: List&lt;String&gt;
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>1480</x><y>300</y><w>300</w><h>500</h></coordinates><panel_attributes>users</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1490</x><y>340</y><w>270</w><h>230</h></coordinates><panel_attributes>UserEntity
{Entity}
--
-mail: String
-password: String
-interests: List&lt;String&gt;
-bookmarks: List&lt;JSONObject&gt;
-follows. List&lt;JSONObject&gt;
-recommendations: List&lt;JSONObject&gt;
--
+changePassword(newPassword: String): void
+changeMail(newMail: String): void
+bookmark(paper: JSONObject): void
+follow(author: JSONObject): void
+addInterest(interest: String): void
+addRecommendations(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1490</x><y>650</y><w>270</w><h>140</h></coordinates><panel_attributes>UserRepository
{Repository}
--

--
#findByMail(mail: String): UserEntity
#delete(user: UserEntity): boolean
#create(mail: String, pw: String): boolean
#findByOID(id: long): UserEntity
#edit(user: UserEntity): boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1590</x><y>560</y><w>80</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*
stores ^</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>0</x><y>960</y><w>700</w><h>440</h></coordinates><panel_attributes>APICommunication</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>60</x><y>1180</y><w>370</w><h>90</h></coordinates><panel_attributes>SemanticScholarCommunication
--

--
-getAPIKey(): String
-doAPICall(searchType: String, filters: List&lt;String&gt;): JSONObject</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>10</x><y>1010</y><w>160</w><h>70</h></coordinates><panel_attributes>API Key stored in ".env"
is read and returned by
getAPIKey() of the 
respective class</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>160</x><y>1010</y><w>110</w><h>80</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;60;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>250</x><y>1010</y><w>370</w><h>140</h></coordinates><panel_attributes>/APICommunication/
{abstract}
--

--
/-getAPIKey(): String/
/-doAPICall(params: List&lt;String&gt;): JSONObject/
+getData(searchType: String, filters: List&lt;String&gt;): JSONObject

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>290</x><y>1140</y><w>30</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>UMLClass</id><coordinates><x>310</x><y>1290</y><w>370</w><h>90</h></coordinates><panel_attributes>IEEEXploreCommunication
--

--
-getAPIKey(): String
-doAPICall(searchType: String, filters: List&lt;String&gt;): JSONObject</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>560</x><y>1140</y><w>30</w><h>170</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;150</additional_attributes></element><element><id>UMLClass</id><coordinates><x>780</x><y>1020</y><w>450</w><h>130</h></coordinates><panel_attributes>DataMerger
{Singleton}
--
-APIs: List&lt;APICommunication&gt;
--
-getAllResponses(params: List&lt;String&gt;): List&lt;JSONObject&gt;
-mergeData(List&lt;JSONObject&gt;): JSONObject
#getData(searchType: String, filters: List&lt;String&gt;): JSONObject

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>780</x><y>1230</y><w>450</w><h>110</h></coordinates><panel_attributes>DataCleaner
{Singleton}
--
-merger: DataMerger
-calculator: AdditionalCalculations
--
-cleanData(data: JSONObject): JSONObject
+getData(searchType: String, filters: List&lt;String&gt;, sortKey: String): JSONObject


</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1000</x><y>1140</y><w>40</w><h>110</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>510</x><y>340</y><w>930</w><h>420</h></coordinates><panel_attributes>search</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1040</x><y>370</y><w>260</w><h>150</h></coordinates><panel_attributes>/SearchEntity/
{abstract}
--
-citations: int
-NonSelfCitations: int
-NoCoAuthorsCitations: int
-indices: List&lt;int&gt;
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1250</x><y>510</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>510</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>1390</x><y>60</y><w>80</w><h>250</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;230;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>1350</x><y>0</y><w>100</w><h>70</h></coordinates><panel_attributes>controllers</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1000</x><y>750</y><w>80</w><h>260</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;10;10;240</additional_attributes></element><element><id>UMLNote</id><coordinates><x>530</x><y>600</y><w>140</w><h>70</h></coordinates><panel_attributes>JSONObjet is read and
the according vars of 
the Entity are set</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>620</x><y>540</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1890</x><y>1240</y><w>250</w><h>100</h></coordinates><panel_attributes>Using the 
org.reflections library,it is possible to get 
all classes that inherit from a specific class. 
In this case all Inices</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1800</x><y>1280</y><w>110</w><h>30</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>1880</x><y>640</y><w>250</w><h>210</h></coordinates><panel_attributes>UserDB</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1750</x><y>680</y><w>150</w><h>40</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;access&gt;&gt;</panel_attributes><additional_attributes>10;20;130;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1900</x><y>690</y><w>210</w><h>140</h></coordinates><panel_attributes>&lt;&lt;table&gt;&gt;
User
--
-OID: long
-mail: String
-pw: String
-interests: List&lt;String&gt;
-bookmarks: List&lt;JSONObject&gt;
-follows: List&lt;JSONObject&gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1170</x><y>1470</y><w>150</w><h>40</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;20;130;20</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>770</x><y>970</y><w>470</w><h>620</h></coordinates><panel_attributes>DataModification</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>610</x><y>1090</y><w>190</w><h>40</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>170;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>840</x><y>1440</y><w>340</w><h>130</h></coordinates><panel_attributes>AdditionalCalculations
{Singleton}
--
-cleaner: DataCleaner
--
+indexCalculation(authorData: JSONObject): void
+selfCitationCalculation(authorData: JSONObject): void
+coAuthorCalculation(authorData: JSONObject): void
+frequentCitersCalculation(authorData: JSONObject): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1000</x><y>1330</y><w>40</w><h>130</h></coordinates><panel_attributes>lt=-&gt;
m1=1
m2=1</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLNote</id><coordinates><x>540</x><y>1470</y><w>190</w><h>90</h></coordinates><panel_attributes>Having a reference to the 
cleaner might not be necessary 
as it only would be needed for 
getting the paper dataof a given 
author via more API calls</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>720</x><y>1480</y><w>140</w><h>30</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;120;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1130</x><y>840</y><w>140</w><h>70</h></coordinates><panel_attributes>Not sure if the 
exporting feature 
should go here</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1180</x><y>710</y><w>30</w><h>150</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;10;10;130</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>1380</x><y>930</y><w>520</w><h>130</h></coordinates><panel_attributes>recommendation</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1390</x><y>970</y><w>500</w><h>70</h></coordinates><panel_attributes>RecommendationHandler
--
-cleaner: DataCleaner
--
+getRecommendations(interests: List&lt;String&gt;, follows: List&lt;String&gt;): List&lt;JSONObject&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1230</x><y>1000</y><w>170</w><h>40</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>150;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1630</x><y>790</y><w>80</w><h>180</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;160;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1510</x><y>1080</y><w>210</w><h>80</h></coordinates><panel_attributes>This class would just be responsible 
for doing additional API calls to 
get the recommendations
based on interests and follows</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1580</x><y>1030</y><w>30</w><h>70</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>520</x><y>450</y><w>470</w><h>100</h></coordinates><panel_attributes>SearchParser
--
_-cleaner: &lt;DataCleaner&gt; {readOnly}_
--
+getResult(search: String, filters: List&lt;String&gt;, sortKey: String): List&lt;SearchEntity&gt;
-createEntity(json: JSONObject): SearchEntity</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>750</x><y>380</y><w>310</w><h>90</h></coordinates><panel_attributes>lt=&lt;-
m1=0..*
m2=1
creates &gt;</panel_attributes><additional_attributes>290;20;10;20;10;70</additional_attributes></element><element><id>UMLNote</id><coordinates><x>610</x><y>880</y><w>160</w><h>70</h></coordinates><panel_attributes>Merger class not needed 
if we decide to only use 
the Semantic Schloar API</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>690</x><y>940</y><w>120</w><h>100</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;100;80</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1320</x><y>840</y><w>130</w><h>30</h></coordinates><panel_attributes>java.util.Date
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1370</x><y>710</y><w>80</w><h>150</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;130;10;10</additional_attributes></element></diagram>