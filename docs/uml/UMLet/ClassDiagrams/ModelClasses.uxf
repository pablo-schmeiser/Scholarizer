<diagram program="umletino" version="15.0.0"><zoom_level>6</zoom_level><help_text>Space for diagram </help_text><element><id>UMLPackage</id><coordinates><x>780</x><y>732</y><w>306</w><h>186</h></coordinates><panel_attributes>indices</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>852</x><y>768</y><w>126</w><h>42</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
IIndex
--
+calculate(List&lt;Int&gt; args): Int
+getName(): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>948</x><y>846</y><w>126</w><h>60</h></coordinates><panel_attributes>H-Index
{Singleton}
--
-name: String
--
#calculate(List&lt;Int&gt; args): Int
#getName(): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>942</x><y>804</y><w>78</w><h>54</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;110;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>798</x><y>846</y><w>126</w><h>60</h></coordinates><panel_attributes>I10-Index
{Singleton}
--
-name: String
--
#calculate(List&lt;Int&gt; args): Int
#getName(): String

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>858</x><y>804</y><w>60</w><h>54</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>80;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>696</x><y>342</y><w>150</w><h>90</h></coordinates><panel_attributes>PaperEntity
{Entity}
--
-authors: List&lt;String&gt;
-title: String
-abstract: String
-publicationDate: Date
-link: String
--
+exportReference(bibTex: boolean): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>288</x><y>162</y><w>804</w><h>330</h></coordinates><panel_attributes>springEntities</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>546</x><y>342</y><w>126</w><h>90</h></coordinates><panel_attributes>AuthorEntity
{Entity}
--
-name: String
-university: String
-frequentCoAuthors: List&lt;String&gt;
-frequentCiters: List&lt;String&gt;
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>888</x><y>180</y><w>180</w><h>300</h></coordinates><panel_attributes>users</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>894</x><y>204</y><w>162</w><h>138</h></coordinates><panel_attributes>UserEntity
{Entity}
--
-mail: String
-password: String
-interests: List&lt;String&gt;
-bookmarks: List&lt;JSONObject&gt;
-follows. List&lt;JSONObject&gt;
-recommendations: List&lt;JSONObject&gt;
--
+changePassword(newPassword: String): void
+changeMail(newMail: String): void
+bookmark(paper: JSONObject): void
+follow(author: JSONObject): void
+addInterest(interest: String): void
+addRecommendations(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>894</x><y>390</y><w>162</w><h>84</h></coordinates><panel_attributes>UserRepository
{Repository}
--

--
#findByMail(mail: String): UserEntity
#delete(user: UserEntity): boolean
#create(mail: String, pw: String): boolean
#findByOID(id: long): UserEntity
#edit(user: UserEntity): boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>954</x><y>336</y><w>48</w><h>66</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*
stores ^</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>0</x><y>576</y><w>420</w><h>264</h></coordinates><panel_attributes>APICommunication</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>36</x><y>708</y><w>222</w><h>54</h></coordinates><panel_attributes>SemanticScholarCommunication
--

--
-getAPIKey(): String
-doAPICall(searchType: String, filters: List&lt;String&gt;): JSONObject</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>6</x><y>606</y><w>96</w><h>42</h></coordinates><panel_attributes>API Key stored in ".env"
is read and returned by
getAPIKey() of the 
respective class</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>96</x><y>606</y><w>66</w><h>48</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;60;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>150</x><y>606</y><w>222</w><h>84</h></coordinates><panel_attributes>/APICommunication/
{abstract}
--

--
/-getAPIKey(): String/
/-doAPICall(params: List&lt;String&gt;): JSONObject/
+getData(searchType: String, filters: List&lt;String&gt;): JSONObject

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>174</x><y>684</y><w>18</w><h>36</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>UMLClass</id><coordinates><x>186</x><y>774</y><w>222</w><h>54</h></coordinates><panel_attributes>IEEEXploreCommunication
--

--
-getAPIKey(): String
-doAPICall(searchType: String, filters: List&lt;String&gt;): JSONObject</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>336</x><y>684</y><w>18</w><h>102</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;150</additional_attributes></element><element><id>UMLClass</id><coordinates><x>468</x><y>612</y><w>270</w><h>78</h></coordinates><panel_attributes>DataMerger
{Singleton}
--
-APIs: List&lt;APICommunication&gt;
--
-getAllResponses(params: List&lt;String&gt;): List&lt;JSONObject&gt;
-mergeData(List&lt;JSONObject&gt;): JSONObject
#getData(searchType: String, filters: List&lt;String&gt;): JSONObject

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>468</x><y>738</y><w>270</w><h>66</h></coordinates><panel_attributes>DataCleaner
{Singleton}
--
-merger: DataMerger
-calculator: AdditionalCalculations
--
-cleanData(data: JSONObject): JSONObject
+getData(searchType: String, filters: List&lt;String&gt;, sortKey: String): JSONObject


</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>684</y><w>24</w><h>66</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>306</x><y>204</y><w>558</w><h>252</h></coordinates><panel_attributes>search</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>624</x><y>222</y><w>156</w><h>90</h></coordinates><panel_attributes>/SearchEntity/
{abstract}
--
-citations: int
-NonSelfCitations: int
-NoCoAuthorsCitations: int
-indices: List&lt;int&gt;
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>750</x><y>306</y><w>18</w><h>48</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>642</x><y>306</y><w>18</w><h>48</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>834</x><y>36</y><w>48</w><h>150</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;230;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>810</x><y>0</y><w>60</w><h>42</h></coordinates><panel_attributes>controllers</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>450</y><w>48</w><h>156</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;10;10;240</additional_attributes></element><element><id>UMLNote</id><coordinates><x>318</x><y>360</y><w>84</w><h>42</h></coordinates><panel_attributes>JSONObjet is read and
the according vars of 
the Entity are set</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>372</x><y>324</y><w>18</w><h>48</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1134</x><y>744</y><w>150</w><h>60</h></coordinates><panel_attributes>Using the 
org.reflections library,it is possible to get 
all classes that inherit from a specific class. 
In this case all Inices</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1080</x><y>768</y><w>66</w><h>18</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>1170</x><y>384</y><w>324</w><h>222</h></coordinates><panel_attributes>UserDB</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1050</x><y>408</y><w>132</w><h>24</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;access&gt;&gt;</panel_attributes><additional_attributes>10;20;200;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1266</x><y>402</y><w>126</w><h>84</h></coordinates><panel_attributes>&lt;&lt;table&gt;&gt;
User
--
-OID: long
-mail: String
-pw: String
-interests: List&lt;String&gt;
-bookmarks: paper
-follows: author
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>702</x><y>882</y><w>90</w><h>24</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;20;130;20</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>462</x><y>582</y><w>282</w><h>372</h></coordinates><panel_attributes>DataModification</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>366</x><y>654</y><w>114</w><h>24</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>170;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>504</x><y>864</y><w>204</w><h>78</h></coordinates><panel_attributes>AdditionalCalculations
{Singleton}
--
-cleaner: DataCleaner
--
+indexCalculation(authorData: JSONObject): void
+selfCitationCalculation(authorData: JSONObject): void
+coAuthorCalculation(authorData: JSONObject): void
+frequentCitersCalculation(authorData: JSONObject): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>798</y><w>24</w><h>78</h></coordinates><panel_attributes>lt=-&gt;
m1=1
m2=1</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLNote</id><coordinates><x>324</x><y>882</y><w>114</w><h>54</h></coordinates><panel_attributes>Having a reference to the 
cleaner might not be necessary 
as it only would be needed for 
getting the paper dataof a given 
author via more API calls</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>432</x><y>888</y><w>84</w><h>18</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;120;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>678</x><y>504</y><w>84</w><h>42</h></coordinates><panel_attributes>Not sure if the 
exporting feature 
should go here</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>708</x><y>426</y><w>18</w><h>90</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;10;10;130</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>828</x><y>558</y><w>312</w><h>78</h></coordinates><panel_attributes>recommendation</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>834</x><y>582</y><w>300</w><h>42</h></coordinates><panel_attributes>RecommendationHandler
--
-cleaner: DataCleaner
--
+getRecommendations(interests: List&lt;String&gt;, follows: List&lt;String&gt;): List&lt;JSONObject&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>738</x><y>600</y><w>102</w><h>24</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>150;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>978</x><y>474</y><w>48</w><h>108</h></coordinates><panel_attributes>lt=.&gt;
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;160;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>906</x><y>648</y><w>126</w><h>48</h></coordinates><panel_attributes>This class would just be responsible 
for doing additional API calls to 
get the recommendations
based on interests and follows</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>948</x><y>618</y><w>18</w><h>42</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>312</x><y>270</y><w>282</w><h>60</h></coordinates><panel_attributes>SearchParser
--
_-cleaner: &lt;DataCleaner&gt; {readOnly}_
--
+getResult(search: String, filters: List&lt;String&gt;, sortKey: String): List&lt;SearchEntity&gt;
-createEntity(json: JSONObject): SearchEntity</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>450</x><y>228</y><w>186</w><h>54</h></coordinates><panel_attributes>lt=&lt;-
m1=0..*
m2=1
creates &gt;</panel_attributes><additional_attributes>290;20;10;20;10;70</additional_attributes></element><element><id>UMLNote</id><coordinates><x>366</x><y>528</y><w>96</w><h>42</h></coordinates><panel_attributes>Merger class not needed 
if we decide to only use 
the Semantic Schloar API</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>414</x><y>564</y><w>72</w><h>60</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;100;80</additional_attributes></element><element><id>UMLClass</id><coordinates><x>792</x><y>504</y><w>78</w><h>18</h></coordinates><panel_attributes>java.util.Date
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>822</x><y>426</y><w>48</w><h>90</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;import&gt;&gt;</panel_attributes><additional_attributes>10;130;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1182</x><y>516</y><w>126</w><h>84</h></coordinates><panel_attributes>&lt;&lt;table&gt;&gt;
paper
--
-OID: long
-title: String
-author: String

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1356</x><y>516</y><w>126</w><h>84</h></coordinates><panel_attributes>&lt;&lt;table&gt;&gt;
author
--
-OID: long
-name: String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>1260</x><y>282</y><w>84</w><h>42</h></coordinates><panel_attributes>TODO: add paper and
author entity and repo</panel_attributes><additional_attributes></additional_attributes></element></diagram>